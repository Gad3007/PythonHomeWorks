# Задача 2. Недоделка
# Вы пришли на работу в компанию по разработке игр, целевая аудитория —
# дети и их родители. У предыдущего программиста было задание сделать две
# игры в одном приложении, чтобы пользователь мог выбирать одну из них.
# Однако программист, на место которого вы пришли, перед увольнением не
# успел выполнить эту задачу и оставил только небольшой шаблон проекта.
# Используя этот шаблон, реализуйте игры «Камень, ножницы, бумага» и «Угадай
# число».
# Правила игры «Камень, ножницы, бумага»: программа запрашивает у
# пользователя строку и выводит, победил он или проиграл. Камень бьёт
# ножницы, ножницы режут бумагу, бумага кроет камень.
# Правила игры «Угадай число»: программа запрашивает у пользователя число
# до тех пор, пока он не отгадает загаданное.
# def rock_paper_scissors():
# # Здесь будет игра «Камень, ножницы, бумага»
# def guess_the_number():
# # Здесь будет игра «Угадай число»
# def mainMenu():
# # Здесь главное меню игры
# mainMenu():
# pass
# Подсказка № 1
# Реализуйте функцию для игры "Камень, ножницы, бумага". Начните с запроса выбора
# игрока. Убедитесь, что ваш код правильно обрабатывает ввод пользователя и
# проверяет его на допустимые значения. Затем, используя логические условия,
# определите победителя, исходя из выбранного игроком и компьютером варианта.
# Подсказка № 2
# Создайте цикл для игры "Угадай число". В этой игре, создайте бесконечный цикл,
# который будет продолжаться до тех пор, пока игрок не угадает загаданное число.
# Внутри цикла запрашивайте ввод числа у пользователя и проверяйте его на
# соответствие загаданному числу.
# Подсказка № 3
# Определите структуру главного меню. В main_menu предоставьте пользователю выбор
# между двумя играми и опцией выхода. Используйте условные операторы для
# определения, какую функцию вызывать в зависимости от выбора пользователя


import random


def rock_paper_scissors():
    cpu = ['Камень', 'Ножницы', 'Бумага']
    hum_choice = ''
    cpu_choice = ''

    while True:
        cpu_choice = random.choice(cpu)
        hum_choice = str(input("Выбери оружие : \n"
                               "1.Камень \n"
                               "2.Ножницы\n"
                               "3.Бумага \n"
                               "0.Выйти в меню \n >"))


        match hum_choice:
            case '1':
                 hum_choice = 'Камень'
            case '2':
                 hum_choice = 'Ножницы'
            case '3':
                 hum_choice = 'Бумага'
            case '0':
                mainMenu()

        print(f'Вы выбрали {hum_choice} пк выбрал {cpu_choice}')

        if hum_choice == 'Камень' and cpu_choice == 'Бумага':
            print('Вы проиграли!')
        if hum_choice == 'Камень' and cpu_choice == 'Ножницы':
            print('Вы победили!')
        if hum_choice == 'Бумага' and cpu_choice == 'Камень':
            print('Вы победили!')
        if hum_choice == 'Бумага' and cpu_choice == 'Ножницы':
            print('Вы проиграли!')
        if hum_choice == 'Ножницы' and cpu_choice == 'Бумага':
            print('Вы победили!')
        if hum_choice == 'Ножницы' and cpu_choice == 'Камень':
            print('Вы проиграли!')
        if hum_choice == cpu_choice:
            print('Ничья!')


def guess_the_number():
    while True:
        cpu_number = random.randint(0,100)
        while True:
            hum_inp = int(input("Введите целое число от 0 до 100 : \n"))
            if hum_inp > cpu_number:
                print("Загаданное число меньше")
            if hum_inp < cpu_number:
                print("Загаданное число больше")
            if hum_inp == cpu_number:
                print('Вы угадали!')
                mainMenu()


def mainMenu():
    choice_game = str(input('Выбери игру! \n'
                        '1.Камень, ножницы, бумага \n'
                        '2.Угадай число \n'
                        '0.Выйти из меню \n>'))
    match choice_game:
        case '1':
            rock_paper_scissors()
        case '2':
            guess_the_number()
        case '0':
            pass

mainMenu()